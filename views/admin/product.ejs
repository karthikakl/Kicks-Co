<%- include('./adminLayouts/header') %>

    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title">Products list</h2>
            <div>
                <a href="/admin/products/addproduct" class="btn btn-primary"><i class="material-icons md-plus"></i> Add
                    new product</a>
            </div>

        </div>
        <div class="col-lg-4 col-md-6 me-auto">
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search product name...."
                class="form-control">
        </div>
        <div class="card mb-4">
            <!-- <header class="card-header"> -->

            <div class="card-body">

                <div class="table-responsive">
                    <table class="table table-hover" id="tableInput">
                        <thead>
                            <tr>
                                <th>Name</th>
                                
                                <th>Category</th>
                                <th>Brand</th>
                                <th>Status</th>
                                
                                <th class="text-end"> Action </th>
                            </tr>
                        </thead>
                        <tbody>

                            <% if (products && products.length> 0) { %>

                                <% products.forEach(product=> { %>
                                    <tr>
                                        <td class="image product-thumbnail"><img
                                            src="/product-images/<%= product.image[0].filename%>"
                                            alt="#" style="max-width: 100px; max-height: 100px;">
                                                                                      
                                                    <h6 class="mb-0 title">
                                                        <%= product.name %>
                                                    </h6>
                                        </td>
                                        <td>
                                            <%= product.category %>
                                        </td>
                                        
                                        <td>
                                            <%= product.brand %>
                                        </td>
                                        <td>
                                            <span class="badge <%= product.isPublished ? 'bg-success' : 'bg-danger' %>">
                                                <%= product.isPublished ? 'published' : 'notpublished' %>
                                        </td>
                                        </span>
                                        </td>
                                        
                                        <td class="text-end">
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Actions
                                                </button>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item" href="/admin/products/viewProduct/<%= product._id %>">View details</a>
                                                    <a class="dropdown-item" href="/admin/products/editproduct?id=<%= product._id %>">Edit</a>
                                                    <% if(product.isPublished === true) { %>
                                                        <button type="button" class="dropdown-item" onclick="Unpublish('unpublish','<%= product._id %>')">Unpublish</button>
                                                    <% } else { %>
                                                        <button type="button" class="dropdown-item" onclick="Unpublish('publish','<%= product._id %>')">Publish</button>
                                                    <% } %>
                                                    <a class="dropdown-item" onclick="deleteProduct('<%= product._id %>')">Delete</a>
                                                </div>
                                            </div>
                                        </td>
                                        
                                        </td>
                                    </tr>
                                    <% }); %>

                                        <% } else { %>
                                            <tr>
                                                <td colspan="6"
                                                    style="font-size: 18px; color: red; text-align: center;">No products
                                                    available.</td>
                                            </tr>
                                            <% } %>
                        </tbody>
                    </table> <!-- table-responsive.// -->
                </div>
            </div> <!-- card-body end// -->
        </div> <!-- card end// -->
        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start" id="paginationList">
                </ul>
            </nav>
        </div>
    </section> <!-- content-main end// -->
 


    <script>

        function Unpublish(Action, productId) {

            const actionVerb = Action === 'publish' ? 'ispublish' : 'unpublish';
            Swal.fire({
                title: "Are you sure?",
                text: `You want to ${Action} this product !`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: `Yes,${Action}  it!`
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/products/${actionVerb}/${productId}`, { method: 'PUT' })
                        .then(res => {
                            if (res.ok) {
                                Swal.fire({
                                    title: `${Action}ed`,
                                    text: `product is ${Action}ed.`,
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                setTimeout(() => {
                                    location.reload()
                                }, 2000)
                            } else {
                                Swal.fire({
                                    position: "center",
                                    icon: "error",
                                    title: "something went Wrong",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        });
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: `canceled the ${Action}`,
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            });
        }


        function deleteProduct(productId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You want to delete this product!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/products/deleteProduct/${productId}`, { method: 'GET' })
                        .then(res => {
                            if (res.ok) {
                                Swal.fire({
                                    title: "Deleted",
                                    text: "The product has been deleted.",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                setTimeout(() => {
                                    location.reload()
                                }, 2000)
                            } else {
                                Swal.fire({
                                    position: "center",
                                    icon: "error",
                                    title: "Something went wrong",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        });
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: "Cancelled",
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            });
        }

        //search
        function myFunction() {
            const input = document.getElementById('myInput');
            const filter = input.value.toUpperCase();
            const table = document.getElementById('tableInput');
            const tr = table.getElementsByTagName('tr');

            for (let i = 0; i < tr.length; i++) {
                let td = tr[i].getElementsByTagName('td')[0]; // Accessing the first td element for product name
                if (td) {
                    let txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }



        //pagination

        document.addEventListener('DOMContentLoaded', function () {
            const content = document.querySelector('.table');
            const itemsPerPage = 5;
            let currentPage = 0;
            const items = Array.from(document.getElementById('tableInput').getElementsByTagName('tr')).slice(1);

            function showPage(page) {
                const startIndex = page * itemsPerPage;
                const endIndex = Math.min(startIndex + itemsPerPage, items.length); // Ensure endIndex doesn't exceed total items
                items.forEach((item, index) => {
                    item.style.display = (index >= startIndex && index < endIndex) ? 'table-row' : 'none';
                });

                updateActiveButtonStates();
            }

            function createPageButtons() {
                const totalPages = Math.ceil(items.length / itemsPerPage);
                const paginationContainer = document.querySelector('.pagination-area .pagination');
                paginationContainer.innerHTML = ''; // Clear existing pagination buttons

                for (let i = 0; i < totalPages; i++) {
                    const pageButton = document.createElement('li');
                    const buttonLink = document.createElement('button');
                    buttonLink.textContent = i + 1;
                    buttonLink.addEventListener('click', () => {
                        currentPage = i;
                        showPage(currentPage);
                        updateActiveButtonStates();
                    });
                    pageButton.appendChild(buttonLink);

                    paginationContainer.appendChild(pageButton);
                }
            }

            function updateActiveButtonStates() {
                const pageButtons = document.querySelectorAll('.pagination-area .pagination button');
                pageButtons.forEach((button, index) => {
                    button.classList.toggle('active', index === currentPage);
                });
            }

            createPageButtons();
            showPage(currentPage);
        });

    </script>

    <style>
        .pagination-area {
            display: flex;
            justify-content: center;
        }

        .pagination button {
            margin: 0 5px;
            padding: 5px 10px;
            background-color: #088178;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .pagination button.active {
            background-color: #0000003a;
        }
    </style>

//dropdown dropdown-menu

<script>
    document.addEventListener('DOMContentLoaded',function(){
        var dropdownToggle = document.querySelector(".dropdown-toggle");
        var dropdownMenu = document.querySelector(".dropdown-menu");

        dropdownToggle.addEventListener('click',function(){
        dropdownMenu.classList.toggle("show");
        })

        document.addEventListener("click", function (event) {
            if (!dropdownToggle.contains(event.target) && !dropdownMenu.contains(event.target)) {
                dropdownMenu.classList.remove("show");
            }
        });
    });
</script>

    <%- include('./adminLayouts/footer') %>